    1. DEDLINE ДЗ к 31-08-2023, до 12:00МСК
    2. Кто не завел — завести аккаунт на гитхабе. Сбросить аккаунт в чат группы. Посомтрите себя в students.txt
    3. Система сборки Maven
    4. Создать СВОЙ проект IntenciveID (где,вместо ID – id группы к примеру 34 (см название чата скайп)) сбросить репу в чатик
    5. Создать package: ru.aston.SNAME_NP (где, SNAME – фамилия латиницей, NP сокращение имени\отчества при наличии).
        1. Иванов Дмитрий Константинович
        2. ru.aston.ivanov_dk
    6. на каждую таску расширяем package:
        1. ru.aston.ivanov_dk.task1
        2. ru.aston.ivanov_dk.task2
    7. Найти себе ревьювера, при пулл реквесте в мастер (буду смотреть мастер ветку)
    8. git flow
    master
        develop
            feaature\task1


Бизнес задача — получить расчетную цену услуг\товаров и т.д. из сформированного сущностями предметной области списка.


Предметная область: согласно номеру из списка students.txt выбрать предметную область.
Построить иерархию классов в  форме где есть 1 абстрактный класс содержащий 3 поля (типы данных, названия полей выбрать согласно предметной области)
и 1 из этих полей класс User(age,name,sourName).
Абстрактный класс является базовым для 2 сущностей.(абстрактный) имплементит в себя метод расчета скидки.

Можете ориентироваться на dz_uml.png
Каждый класс наследуемый от абстрактного реализует свою логику скидки (придумайте реализацию методов).

Финально, создать класс который бы в качестве поля содержал в себе все создаваемые заказы\услуги в виде списка,
и в нем 2 метода:
1) подсчет цены всех добавленых заказов\товаров\услуг
2) вывод заказов в отсортированный список по фамилии User, в алфавитном порядке.

Подключите тестовый фреймворк и напишите тесты, ради бога не используйте psvm()

Используем интерфейсы, наследование, полиморфизм, Generic, не забываем про Comparator или Comparable, hashcode() equals()
Предметная область.
    1. ЖД перевозки — перевозка пассажиров пригород\международный билет
    2. Авиа перевозки — региональные\международные билеты
    3. Выдача кредитов — потребительский \ автокредит
    4. Продажа компьютеров — скупка продажа ПК
    5. Тур Агентство- тур поездки авиа \ автобусом
    6. Косметические услуги полный картбланш для творчества
    7. Фитнес центр — абонементы в спортзал на 1 мес на 1 посещение
    8. Услуги парикмахерской
    9. Аренда авто — аренда грузовой / легковой техники
    10. Прокат самокатов тариф со страховкой / без/  по приборам
    11. Сервис доставки еды — ночной / дневной тарифы . Зона заказа
    12. Сервис продажи билетов кино \ театр
    13. Мед. услуги.  дантист \ окулист
    14. Аптека (рецепты) продажа лекарств по рецептам \ без
    15. Продажа автозапчастей бу\новых
    16. Экскурсионные услуги бронирование \ горячий тур
    17. Продажа билетов гор. Транспорта автобус \ трамвай \ скидки
    18. Прокат\покупка инструмента.
    19. Вет клиника Лечение кошек \ собак
    20. Продажа авто. Продажа в кредит \ продажа вся сумма
    21. Услуги химчистки. Химчистка авто \ одежды
    22. Фото услуги. Цифровая \ пленочная печать

    *** ПО ТЕОРИИ **

    • файл "question1.txt" допилить руками всей группой !!! Делаем не просто в мастере
    а ответвляемся в фичу ветку feature/dz1 допиливаем, комитим и делаем ПР, меня в апруверы.
    КАЖДЫЙ ВОПРОС СОДЕРЖИТ ОТВЕТ ВЗЯТЫЙ ИЗ ДОКУМЕНТАЦИИ ЖЕЛАТЕЛЬНО ОФИЦИАЛЬНОЙ.
    Например
    Вопрос 1. Наследование.
    Ответ 2. Свойство системы создавать  ... основываясь ... с полным или частичным заимствованием поведения и характеристик
    https://docs.oracle.com/javase/tutorial/java/concepts/index.html

      Читаем “Грокаем алгоритмы”
    • До деталей изучить иерархию коллекций, сложность операций (Big O) и самые популярные реализации Java Collections Framework
        ◦ ArrayList под капотом
        ◦ HashMap под капотом
        ◦ А также LinkedList, HashSet, TreeSet, понять применения Comparable, Comparator
    • К след лекции повторить структуры данных и Exceptions